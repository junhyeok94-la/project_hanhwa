[2025-08-22T05:04:00.017+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-08-22T05:04:00.042+0000] {taskinstance.py:2603} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: etl_pipeline_bi.create_map_data_to_bi manual__2025-08-22T05:03:53+00:00 [queued]>
[2025-08-22T05:04:00.054+0000] {taskinstance.py:2603} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: etl_pipeline_bi.create_map_data_to_bi manual__2025-08-22T05:03:53+00:00 [queued]>
[2025-08-22T05:04:00.054+0000] {taskinstance.py:2856} INFO - Starting attempt 1 of 1
[2025-08-22T05:04:00.075+0000] {taskinstance.py:2879} INFO - Executing <Task(PostgresOperator): create_map_data_to_bi> on 2025-08-22 05:03:53+00:00
[2025-08-22T05:04:00.090+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=1615) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-08-22T05:04:00.094+0000] {standard_task_runner.py:72} INFO - Started process 1619 to run task
[2025-08-22T05:04:00.096+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'etl_pipeline_bi', 'create_map_data_to_bi', 'manual__2025-08-22T05:03:53+00:00', '--job-id', '22', '--raw', '--subdir', 'DAGS_FOLDER/etl_pipeline_bi.py', '--cfg-path', '/tmp/tmpt8es_202']
[2025-08-22T05:04:00.100+0000] {standard_task_runner.py:105} INFO - Job 22: Subtask create_map_data_to_bi
[2025-08-22T05:04:00.170+0000] {task_command.py:467} INFO - Running <TaskInstance: etl_pipeline_bi.create_map_data_to_bi manual__2025-08-22T05:03:53+00:00 [running]> on host 21c40e4c1785
[2025-08-22T05:04:00.568+0000] {taskinstance.py:3122} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='etl_pipeline_bi' AIRFLOW_CTX_TASK_ID='create_map_data_to_bi' AIRFLOW_CTX_EXECUTION_DATE='2025-08-22T05:03:53+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-08-22T05:03:53+00:00'
[2025-08-22T05:04:00.572+0000] {taskinstance.py:731} INFO - ::endgroup::
[2025-08-22T05:04:00.589+0000] {sql.py:282} INFO - Executing: 
        DROP TABLE IF EXISTS bi.shipbuilding_map_data;
        
        CREATE TABLE bi.shipbuilding_map_data AS
        SELECT
            project_id,
            business_unit,
            product_type,
            country,
            revenue,
            latitude,
            longitude
        FROM (
            SELECT
                project_id,
                business_unit,
                product_type,
                revenue,
                country,
                latitude,
                longitude
            FROM stg.stg_container_ships
            
            UNION ALL
            
            SELECT
                project_id,
                business_unit,
                product_type,
                revenue,
                country,
                latitude,
                longitude
            FROM stg.stg_drill_ships
            
            UNION ALL
            
            SELECT
                project_id,
                business_unit,
                product_type,
                revenue,
                country,
                latitude,
                longitude
            FROM stg.stg_submarines
        ) AS combined_stg_data
        WHERE latitude IS NOT NULL AND longitude IS NOT NULL;
        
[2025-08-22T05:04:00.604+0000] {base.py:84} INFO - Retrieving connection 'datalake_1'
[2025-08-22T05:04:00.621+0000] {base.py:84} INFO - Retrieving connection 'datalake_1'
[2025-08-22T05:04:00.655+0000] {sql.py:509} INFO - Running statement: 
        DROP TABLE IF EXISTS bi.shipbuilding_map_data;
        
        CREATE TABLE bi.shipbuilding_map_data AS
        SELECT
            project_id,
            business_unit,
            product_type,
            country,
            revenue,
            latitude,
            longitude
        FROM (
            SELECT
                project_id,
                business_unit,
                product_type,
                revenue,
                country,
                latitude,
                longitude
            FROM stg.stg_container_ships
            
            UNION ALL
            
            SELECT
                project_id,
                business_unit,
                product_type,
                revenue,
                country,
                latitude,
                longitude
            FROM stg.stg_drill_ships
            
            UNION ALL
            
            SELECT
                project_id,
                business_unit,
                product_type,
                revenue,
                country,
                latitude,
                longitude
            FROM stg.stg_submarines
        ) AS combined_stg_data
        WHERE latitude IS NOT NULL AND longitude IS NOT NULL;
        , parameters: None
[2025-08-22T05:04:00.659+0000] {taskinstance.py:3301} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 767, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 733, in _execute_callable
    return ExecutionCallableRunner(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 406, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py", line 288, in execute
    output = hook.run(
             ^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py", line 456, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py", line 514, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.UndefinedColumn: column "latitude" does not exist
LINE 44:                 latitude,
                         ^
DETAIL:  There are columns named "latitude", but they are in tables that cannot be referenced from this part of the query.
HINT:  Try using a table-qualified name.

[2025-08-22T05:04:00.672+0000] {taskinstance.py:1225} INFO - Marking task as FAILED. dag_id=etl_pipeline_bi, task_id=create_map_data_to_bi, run_id=manual__2025-08-22T05:03:53+00:00, execution_date=20250822T050353, start_date=20250822T050400, end_date=20250822T050400
[2025-08-22T05:04:00.693+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2025-08-22T05:04:00.695+0000] {standard_task_runner.py:124} ERROR - Failed to execute job 22 for task create_map_data_to_bi (column "latitude" does not exist
LINE 44:                 latitude,
                         ^
DETAIL:  There are columns named "latitude", but they are in tables that cannot be referenced from this part of the query.
HINT:  Try using a table-qualified name.
; 1619)
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py", line 117, in _start_by_fork
    ret = args.func(args, dag=self.dag)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/cli_config.py", line 49, in command
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/cli.py", line 115, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 483, in task_run
    task_return_code = _run_task_by_selected_method(args, _dag, ti)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 256, in _run_task_by_selected_method
    return _run_raw_task(args, ti)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 341, in _run_raw_task
    return ti._run_raw_task(
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 2995, in _run_raw_task
    return _run_raw_task(
           ^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 273, in _run_raw_task
    TaskInstance._execute_task_with_callbacks(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3149, in _execute_task_with_callbacks
    result = self._execute_task(context, task_orig)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3173, in _execute_task
    return _execute_task(self, context, task_orig)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 767, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 733, in _execute_callable
    return ExecutionCallableRunner(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 406, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py", line 288, in execute
    output = hook.run(
             ^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py", line 456, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py", line 514, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.UndefinedColumn: column "latitude" does not exist
LINE 44:                 latitude,
                         ^
DETAIL:  There are columns named "latitude", but they are in tables that cannot be referenced from this part of the query.
HINT:  Try using a table-qualified name.

[2025-08-22T05:04:00.760+0000] {local_task_job_runner.py:261} INFO - Task exited with return code 1
[2025-08-22T05:04:00.774+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/models/baseoperator.py:1378: AirflowProviderDeprecationWarning: Call to deprecated class PostgresOperator. (Please use `***.providers.common.sql.operators.sql.SQLExecuteQueryOperator`.Also, you can provide `hook_params={'schema': <database>}`.)
  result = cls.__new__(cls)

[2025-08-22T05:04:00.797+0000] {taskinstance.py:3891} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-08-22T05:04:00.803+0000] {local_task_job_runner.py:240} INFO - ::endgroup::
